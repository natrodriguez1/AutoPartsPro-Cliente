import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "./ui/card";
import { Input } from "./ui/input";
import { Button } from "./ui/button";
import { Badge } from "./ui/badge";
import { Avatar, AvatarFallback } from "./ui/avatar";
import { 
  MessageCircle, 
  Send, 
  X, 
  Minimize2, 
  Bot,
  MapPin,
  Star,
  Phone,
  Wrench,
  Car,
  AlertTriangle
} from "lucide-react";
import { motion, AnimatePresence } from "motion/react";

interface Mensaje {
  id: string;
  tipo: "usuario" | "bot";
  contenido: string;
  timestamp: Date;
  opciones?: Array<{
    label: string;
    accion: () => void;
  }>;
  talleres?: Array<{
    id: string;
    nombre: string;
    especialidad: string;
    rating: number;
    distancia: string;
    telefono: string;
  }>;
  productos?: Array<{
    id: string;
    nombre: string;
    precio: number;
    categoria: string;
  }>;
}

// Base de conocimiento automotriz expandida
const conocimientoAutomotriz = {
  sintomas: {
    "ruido frenos": {
      diagnostico: "Posible desgaste de pastillas de freno",
      solucion: "Inspecci√≥n y cambio de pastillas/discos",
      urgencia: "alta",
      talleres: ["TallerPro Guayaquil"],
      productos: ["Pastillas de Freno Cer√°micas Premium Bosch", "Discos de Freno Ventilados Brembo"]
    },
    "motor no enciende": {
      diagnostico: "Problema en sistema de arranque o combustible",
      solucion: "Revisar bater√≠a, buj√≠as y bomba de combustible",
      urgencia: "alta",
      talleres: ["AutoMaster Quito"],
      productos: ["Bater√≠a Bosch S4 12V 60Ah", "Buj√≠as de Encendido NGK Iridium"]
    },
    "vibracion volante": {
      diagnostico: "Problema en sistema de direcci√≥n o balanceado",
      solucion: "Balanceado de llantas y revisi√≥n de suspensi√≥n",
      urgencia: "media",
      talleres: ["Mec√°nicaTotal Cuenca"],
      productos: ["Neum√°ticos Urbanos Bridgestone", "Amortiguadores Monroe Gas-Matic"]
    },
    "aceite negro": {
      diagnostico: "Aceite de motor vencido o contaminado",
      solucion: "Cambio de aceite y filtro inmediato",
      urgencia: "media",
      talleres: ["AutoMaster Quito"],
      productos: ["Aceite de Motor Sint√©tico Mobil 1", "Filtro de Aire K&N Performance"]
    },
    "luces debiles": {
      diagnostico: "Problema en sistema el√©ctrico o focos",
      solucion: "Revisar bater√≠a y cambiar a LED",
      urgencia: "baja",
      talleres: ["TallerPro Guayaquil"],
      productos: ["Kit de Conversi√≥n LED para Faros", "Bater√≠a Bosch S4 12V 60Ah"]
    }
  },
  
  mantenimiento: {
    "cada_5000km": [
      "Cambio de aceite de motor",
      "Revisi√≥n de filtro de aire",
      "Inspecci√≥n de frenos",
      "Verificaci√≥n de niveles de fluidos"
    ],
    "cada_10000km": [
      "Cambio de filtro de aceite",
      "Rotaci√≥n de neum√°ticos",
      "Inspecci√≥n de suspensi√≥n",
      "Revisi√≥n de bater√≠a"
    ],
    "cada_20000km": [
      "Cambio de filtro de aire",
      "Cambio de buj√≠as",
      "Alineaci√≥n y balanceado",
      "Inspecci√≥n de correa de distribuci√≥n"
    ]
  },

  talleresPorEspecialidad: {
    "frenos": "TallerPro Guayaquil - Especialistas en sistemas de frenado con tecnolog√≠a europea",
    "motor": "AutoMaster Quito - Expertos en diagn√≥stico computarizado y reparaci√≥n de motores",
    "suspension": "Mec√°nicaTotal Cuenca - L√≠deres en suspensi√≥n, alineaci√≥n 3D y direcci√≥n",
    "electrico": "TallerPro Guayaquil - Sistemas el√©ctricos y conversi√≥n a LED",
    "transmision": "AutoMaster Quito - Reparaci√≥n de cajas autom√°ticas y manuales"
  }
};

const talleresBD = [
  {
    id: "1",
    nombre: "AutoMaster Quito",
    especialidad: "Motor y Transmisi√≥n",
    rating: 4.8,
    distancia: "2.3 km",
    telefono: "+593 2 245-6789",
    rese√±as: [
      "Excelente diagn√≥stico computarizado, encontraron la falla que otros no pudieron",
      "Muy profesionales y explican todo detalladamente",
      "Buenos precios y trabajo garantizado por 6 meses"
    ],
    servicios: ["Diagn√≥stico computarizado", "Reparaci√≥n de motores", "Cambio de aceite", "Transmisi√≥n autom√°tica"],
    horarios: "Lun-Vie 8:00-18:00, S√°b 8:00-16:00",
    experiencia: "15 a√±os"
  },
  {
    id: "2",
    nombre: "TallerPro Guayaquil",
    especialidad: "Sistema de Frenos y El√©ctrico",
    rating: 4.6,
    distancia: "3.1 km",
    telefono: "+593 4 289-3456",
    rese√±as: [
      "Los mejores en frenos, especialistas en carros europeos",
      "Trabajo garantizado y usan repuestos originales",
      "Atenci√≥n r√°pida, terminaron en el tiempo prometido"
    ],
    servicios: ["Cambio de pastillas", "Rectificado de discos", "Sistema ABS", "Instalaci√≥n LED"],
    horarios: "Lun-Vie 7:30-19:00, S√°b 8:00-17:00",
    experiencia: "12 a√±os"
  },
  {
    id: "3",
    nombre: "Mec√°nicaTotal Cuenca",
    especialidad: "Suspensi√≥n y Direcci√≥n",
    rating: 4.7,
    distancia: "4.5 km",
    telefono: "+593 7 405-7890",
    rese√±as: [
      "Alineaci√≥n 3D perfecta, el carro maneja como nuevo",
      "Personal muy capacitado en suspensi√≥n deportiva",
      "Precios justos y siempre cumplen con los tiempos"
    ],
    servicios: ["Amortiguadores", "Alineaci√≥n 3D", "Balanceado", "Direcci√≥n hidr√°ulica"],
    horarios: "Lun-Vie 8:00-17:30, S√°b 8:00-15:00",
    experiencia: "18 a√±os"
  }
];

// Base de datos de productos
const productosBD = [
  {
    id: "1",
    nombre: "Pastillas de Freno Cer√°micas Premium Bosch",
    precio: 120,
    categoria: "frenos",
    marca: "Bosch",
    descripcion: "Pastillas de alta performance para frenado superior",
    disponible: true
  },
  {
    id: "2", 
    nombre: "Aceite de Motor Sint√©tico Mobil 1",
    precio: 45,
    categoria: "lubricantes",
    marca: "Mobil",
    descripcion: "Aceite sint√©tico premium 5W-30",
    disponible: true
  },
  {
    id: "3",
    nombre: "Bater√≠a Bosch S4 12V 60Ah",
    precio: 95,
    categoria: "electrico",
    marca: "Bosch", 
    descripcion: "Bater√≠a de arranque libre de mantenimiento",
    disponible: true
  },
  {
    id: "4",
    nombre: "Amortiguadores Monroe Gas-Matic",
    precio: 140,
    categoria: "suspension",
    marca: "Monroe",
    descripcion: "Amortiguadores de gas para mejor estabilidad",
    disponible: true
  },
  {
    id: "5",
    nombre: "Neum√°ticos Urbanos Bridgestone",
    precio: 180,
    categoria: "neumaticos",
    marca: "Bridgestone",
    descripcion: "Neum√°ticos 205/55R16 para ciudad",
    disponible: true
  },
  {
    id: "6",
    nombre: "Kit de Conversi√≥n LED para Faros",
    precio: 85,
    categoria: "electrico",
    marca: "Philips",
    descripcion: "Kit completo LED H4 6000K",
    disponible: true
  }
];

// Base de datos de servicios
const serviciosBD = [
  {
    id: "1",
    nombre: "Cambio de Aceite Premium",
    precio: 65,
    categoria: "mantenimiento",
    duracion: "45 min",
    descripcion: "Cambio de aceite sint√©tico + filtro",
    incluye: ["Aceite sint√©tico 5L", "Filtro de aceite", "Revisi√≥n de niveles"]
  },
  {
    id: "2",
    nombre: "Diagn√≥stico Computarizado Completo", 
    precio: 35,
    categoria: "diagnostico",
    duracion: "60 min",
    descripcion: "Escaneo completo de todos los sistemas",
    incluye: ["Scanner OBD2", "Reporte detallado", "Recomendaciones"]
  },
  {
    id: "3",
    nombre: "Servicio de Frenos Completo",
    precio: 120,
    categoria: "frenos", 
    duracion: "2 horas",
    descripcion: "Cambio de pastillas y revisi√≥n integral",
    incluye: ["Pastillas nuevas", "Revisi√≥n de discos", "Sangrado de frenos"]
  },
  {
    id: "4",
    nombre: "Alineaci√≥n 3D y Balanceado",
    precio: 55,
    categoria: "suspension",
    duracion: "90 min", 
    descripcion: "Alineaci√≥n computarizada + balanceado",
    incluye: ["Alineaci√≥n 3D", "Balanceado 4 ruedas", "Reporte impreso"]
  },
  {
    id: "5",
    nombre: "Revisi√≥n Pre-Viaje Completa",
    precio: 80,
    categoria: "mantenimiento",
    duracion: "2 horas",
    descripcion: "Inspecci√≥n integral antes de viajar",
    incluye: ["45 puntos de revisi√≥n", "Reporte detallado", "Recomendaciones"]
  }
];

export function Chatbot() {
  const [abierto, setAbierto] = useState(false);
  const [minimizado, setMinimizado] = useState(false);
  const [mensajes, setMensajes] = useState<Mensaje[]>([
    {
      id: "1",
      tipo: "bot",
      contenido: "¬°Hola! Soy el Asistente Automotriz de AutoParts Pro üöó\n\nPuedo ayudarte con:\n‚Ä¢ Diagn√≥stico de problemas del auto\n‚Ä¢ Recomendaciones de talleres\n‚Ä¢ Consejos de mantenimiento\n‚Ä¢ Selecci√≥n de repuestos\n\n¬øQu√© necesitas?",
      timestamp: new Date(),
      opciones: [
        { label: "üîß Mi auto tiene un problema", accion: () => manejarOpcion("diagnostico") },
        { label: "üè™ Buscar taller especializado", accion: () => manejarOpcion("talleres") },
        { label: "üìÖ Programa de mantenimiento", accion: () => manejarOpcion("mantenimiento") },
        { label: "üõí Buscar repuestos", accion: () => manejarOpcion("repuestos") },
        { label: "üîç B√∫squeda general", accion: () => manejarOpcion("busqueda") }
      ]
    }
  ]);
  const [nuevoMensaje, setNuevoMensaje] = useState("");
  const [escribiendo, setEscribiendo] = useState(false);

  const agregarMensaje = (mensaje: Omit<Mensaje, "id" | "timestamp">) => {
    const nuevoMsg: Mensaje = {
      ...mensaje,
      id: Date.now().toString(),
      timestamp: new Date()
    };
    setMensajes(prev => [...prev, nuevoMsg]);
  };

  const simularRespuestaBot = (contenido: string, opciones?: any[], talleres?: any[], productos?: any[]) => {
    setEscribiendo(true);
    setTimeout(() => {
      setEscribiendo(false);
      agregarMensaje({
        tipo: "bot",
        contenido,
        opciones,
        talleres,
        productos
      });
    }, 1500);
  };

  const diagnosticarProblema = (problema: string) => {
    const problemaLower = problema.toLowerCase();
    let diagnostico = null;

    // Buscar coincidencias en la base de conocimiento
    for (const [key, value] of Object.entries(conocimientoAutomotriz.sintomas)) {
      if (problemaLower.includes(key)) {
        diagnostico = value;
        break;
      }
    }

    if (diagnostico) {
      const urgenciaColor = diagnostico.urgencia === "alta" ? "üî¥" : 
                           diagnostico.urgencia === "media" ? "üü°" : "üü¢";
      
      const talleresRecomendados = talleresBD.filter(t => 
        diagnostico.talleres.some(dt => t.nombre.includes(dt))
      );

      simularRespuestaBot(
        `${urgenciaColor} **Diagn√≥stico:**\n${diagnostico.diagnostico}\n\n**Soluci√≥n recomendada:**\n${diagnostico.solucion}\n\n**Nivel de urgencia:** ${diagnostico.urgencia.toUpperCase()}`,
        [
          { label: "Ver talleres especializados", accion: () => mostrarTalleresEspecializados(diagnostico.talleres) },
          { label: "Ver repuestos necesarios", accion: () => mostrarRepuestosRecomendados(diagnostico.productos) },
          { label: "M√°s informaci√≥n", accion: () => darMasInformacion(diagnostico) }
        ],
        talleresRecomendados
      );
    } else {
      simularRespuestaBot(
        "No pude identificar el problema espec√≠fico. ¬øPodr√≠as darme m√°s detalles?\n\nPor ejemplo:\n‚Ä¢ ¬øQu√© ruidos escuchas?\n‚Ä¢ ¬øCu√°ndo ocurre el problema?\n‚Ä¢ ¬øHay luces de advertencia encendidas?",
        [
          { label: "Hablar con especialista", accion: () => manejarOpcion("talleres") },
          { label: "Problemas comunes", accion: () => mostrarProblemasComunes() }
        ]
      );
    }
  };

  const mostrarProblemasComunes = () => {
    simularRespuestaBot(
      "**Problemas m√°s comunes:**\n\nüîß **Frenos:** Ruidos, vibraci√≥n al frenar\nüöó **Motor:** No enciende, p√©rdida de potencia\nüõû **Neum√°ticos:** Desgaste irregular, vibraci√≥n\n‚ö° **El√©ctrico:** Luces d√©biles, bater√≠a se descarga\nüîß **Suspensi√≥n:** Ruidos en curvas, auto rebota",
      [
        { label: "Mi problema es de frenos", accion: () => diagnosticarProblema("ruido frenos") },
        { label: "Mi problema es del motor", accion: () => diagnosticarProblema("motor no enciende") },
        { label: "Mi problema es el√©ctrico", accion: () => diagnosticarProblema("luces debiles") },
        { label: "Otro problema", accion: () => manejarOpcion("diagnostico") }
      ]
    );
  };

  const mostrarMantenimientoPorKm = (kilometraje: string) => {
    const mantenimiento = conocimientoAutomotriz.mantenimiento[kilometraje as keyof typeof conocimientoAutomotriz.mantenimiento];
    if (mantenimiento) {
      const lista = mantenimiento.map(item => `‚Ä¢ ${item}`).join('\n');
      simularRespuestaBot(
        `**Mantenimiento ${kilometraje.replace('_', ' ')}:**\n\n${lista}\n\nüí° **Consejo:** Es mejor prevenir que reparar. El mantenimiento regular alarga la vida de tu veh√≠culo.`,
        [
          { label: "Buscar talleres", accion: () => manejarOpcion("talleres") },
          { label: "Ver repuestos necesarios", accion: () => manejarOpcion("repuestos") },
          { label: "Agendar cita", accion: () => agendarCita() }
        ]
      );
    }
  };

  const recomendarTallerPorEspecialidad = (especialidad: string) => {
    const recomendacion = conocimientoAutomotriz.talleresPorEspecialidad[especialidad as keyof typeof conocimientoAutomotriz.talleresPorEspecialidad];
    const talleres = talleresBD.filter(t => 
      t.especialidad.toLowerCase().includes(especialidad)
    );

    if (recomendacion && talleres.length > 0) {
      simularRespuestaBot(
        `**Recomendaci√≥n para ${especialidad}:**\n\n${recomendacion}\n\n‚≠ê **Datos del taller:**\n‚Ä¢ ${talleres[0].experiencia} de experiencia\n‚Ä¢ Calificaci√≥n: ${talleres[0].rating}/5.0\n‚Ä¢ Horarios: ${talleres[0].horarios}`,
        [
          { label: "Contactar taller", accion: () => contactarTaller(talleres[0]) },
          { label: "Ver otros talleres", accion: () => manejarOpcion("talleres") },
          { label: "Leer rese√±as", accion: () => mostrarRese√±asDetalladas(talleres[0]) }
        ],
        talleres
      );
    }
  };

  const mostrarRese√±asDetalladas = (taller: any) => {
    const rese√±as = taller.rese√±as.map((rese√±a: string, index: number) => 
      `${index + 1}. "${rese√±a}"`
    ).join('\n\n');

    simularRespuestaBot(
      `**Rese√±as de ${taller.nombre}:**\n\n${rese√±as}\n\nüìû ¬øQuieres contactarlos?`,
      [
        { label: "Llamar ahora", accion: () => contactarTaller(taller) },
        { label: "Ver ubicaci√≥n", accion: () => verUbicacion(taller) },
        { label: "Buscar otro taller", accion: () => manejarOpcion("talleres") }
      ]
    );
  };

  const manejarOpcion = (tipo: string) => {
    switch (tipo) {
      case "diagnostico":
        agregarMensaje({ tipo: "usuario", contenido: "Mi auto tiene un problema" });
        simularRespuestaBot(
          "üîç **Diagn√≥stico Automotriz**\n\nCu√©ntame qu√© problema est√° presentando tu veh√≠culo. Puedes describir:\n\n‚Ä¢ Ruidos extra√±os\n‚Ä¢ Comportamiento anormal\n‚Ä¢ Luces de advertencia\n‚Ä¢ P√©rdida de rendimiento\n\nEscribe los s√≠ntomas y te ayudo a identificar el problema.",
          [
            { label: "Problemas comunes", accion: () => mostrarProblemasComunes() },
            { label: "Emergencia", accion: () => manejarEmergencia() }
          ]
        );
        break;
      
      case "talleres":
        agregarMensaje({ tipo: "usuario", contenido: "Buscar taller especializado" });
        simularRespuestaBot(
          "üè™ **Talleres Especializados en Ecuador**\n\n¬øQu√© tipo de servicio necesitas?",
          [
            { label: "üîß Frenos", accion: () => recomendarTallerPorEspecialidad("frenos") },
            { label: "üöó Motor", accion: () => recomendarTallerPorEspecialidad("motor") },
            { label: "üõû Suspensi√≥n", accion: () => recomendarTallerPorEspecialidad("suspension") },
            { label: "‚ö° El√©ctrico", accion: () => recomendarTallerPorEspecialidad("electrico") },
            { label: "üìç Ver todos cercanos", accion: () => mostrarTodosLosTalleres() }
          ]
        );
        break;
      
      case "mantenimiento":
        agregarMensaje({ tipo: "usuario", contenido: "Programa de mantenimiento" });
        simularRespuestaBot(
          "üìÖ **Mantenimiento Preventivo**\n\n¬øCu√°ntos kil√≥metros tiene tu veh√≠culo o cada cu√°nto quieres hacer mantenimiento?",
          [
            { label: "Cada 5,000 km", accion: () => mostrarMantenimientoPorKm("cada_5000km") },
            { label: "Cada 10,000 km", accion: () => mostrarMantenimientoPorKm("cada_10000km") },
            { label: "Cada 20,000 km", accion: () => mostrarMantenimientoPorKm("cada_20000km") },
            { label: "Plan personalizado", accion: () => crearPlanPersonalizado() }
          ]
        );
        break;
      
      case "repuestos":
        agregarMensaje({ tipo: "usuario", contenido: "Buscar repuestos" });
        simularRespuestaBot(
          "üõí **Cat√°logo de Repuestos**\n\n¬øQu√© tipo de repuesto buscas?",
          [
            { label: "üîß Frenos", accion: () => mostrarRepuestosPorCategoria("frenos") },
            { label: "üöó Motor", accion: () => mostrarRepuestosPorCategoria("motor") },
            { label: "üõû Neum√°ticos", accion: () => mostrarRepuestosPorCategoria("neumaticos") },
            { label: "‚ö° El√©ctrico", accion: () => mostrarRepuestosPorCategoria("electrico") },
            { label: "üîç Buscar espec√≠fico", accion: () => buscarRepuestoEspecifico() }
          ]
        );
        break;
      
      case "busqueda":
        agregarMensaje({ tipo: "usuario", contenido: "B√∫squeda general" });
        simularRespuestaBot(
          "üîç **B√∫squeda en AutoParts Pro**\n\n¬øQu√© est√°s buscando?\n\nPuedes buscar por:\n‚Ä¢ Nombre del producto\n‚Ä¢ Marca espec√≠fica\n‚Ä¢ Tipo de servicio\n‚Ä¢ Nombre del taller\n‚Ä¢ Categor√≠a\n\nEscribe lo que necesitas y te ayudo a encontrarlo.",
          [
            { label: "üõí Ver productos populares", accion: () => mostrarProductosPopulares() },
            { label: "‚öôÔ∏è Ver servicios m√°s solicitados", accion: () => mostrarServiciosPopulares() },
            { label: "üè™ Ver talleres mejor calificados", accion: () => mostrarTalleresMejores() },
            { label: "üîç B√∫squeda por categor√≠a", accion: () => busquedaPorCategoria() }
          ]
        );
        break;
    }
  };

  const manejarEmergencia = () => {
    simularRespuestaBot(
      "üö® **EMERGENCIA AUTOMOTRIZ**\n\n**Pasos inmediatos:**\n1. Encuentra un lugar seguro para detenerte\n2. Enciende las luces de emergencia\n3. Eval√∫a la situaci√≥n\n\n**Contactos de emergencia:**\n‚Ä¢ Bomberos: 911\n‚Ä¢ Gr√∫a AutoParts: +593 99-GRUAEC\n\n¬øNecesitas asistencia inmediata?",
      [
        { label: "üöó Llamar gr√∫a", accion: () => llamarGrua() },
        { label: "üìû Taller m√°s cercano", accion: () => tallerMasCercano() },
        { label: "üîß Autodiagn√≥stico", accion: () => autodiagnosticoEmergencia() }
      ]
    );
  };

  const enviarMensaje = () => {
    if (!nuevoMensaje.trim()) return;
    
    agregarMensaje({ tipo: "usuario", contenido: nuevoMensaje });
    
    // An√°lisis inteligente del mensaje
    const mensaje = nuevoMensaje.toLowerCase();
    
    // Diagn√≥stico de problemas
    if (mensaje.includes("ruido") || mensaje.includes("sonido")) {
      if (mensaje.includes("freno")) {
        diagnosticarProblema("ruido frenos");
      } else {
        simularRespuestaBot("¬øPuedes especificar d√≥nde escuchas el ruido? (frenos, motor, suspensi√≥n)");
      }
    } else if (mensaje.includes("no enciende") || mensaje.includes("no arranca")) {
      diagnosticarProblema("motor no enciende");
    } else if (mensaje.includes("vibra") || mensaje.includes("tiembla")) {
      diagnosticarProblema("vibracion volante");
    } else if (mensaje.includes("aceite")) {
      diagnosticarProblema("aceite negro");
    } else if (mensaje.includes("luz") || mensaje.includes("faro")) {
      diagnosticarProblema("luces debiles");
    } 
    // B√∫squeda de talleres
    else if (mensaje.includes("taller") || mensaje.includes("mecanic")) {
      manejarOpcion("talleres");
    }
    // Mantenimiento
    else if (mensaje.includes("mantenimiento") || mensaje.includes("servicio")) {
      manejarOpcion("mantenimiento");
    }
    // Repuestos
    else if (mensaje.includes("repuesto") || mensaje.includes("pieza") || mensaje.includes("comprar")) {
      manejarOpcion("repuestos");
    }
    // B√∫squeda espec√≠fica
    else if (mensaje.includes("buscar") || mensaje.includes("encontrar") || mensaje.includes("necesito")) {
      realizarBusqueda(mensaje);
    }
    // Emergencia
    else if (mensaje.includes("emergencia") || mensaje.includes("urgente") || mensaje.includes("ayuda")) {
      manejarEmergencia();
    }
    // Respuesta gen√©rica inteligente
    else {
      simularRespuestaBot(
        "Entiendo que necesitas ayuda automotriz. Para darte la mejor recomendaci√≥n, ¬øpodr√≠as ser m√°s espec√≠fico?\n\nüí° **Puedo ayudarte con:**\n‚Ä¢ Diagn√≥stico de problemas\n‚Ä¢ Recomendaci√≥n de talleres\n‚Ä¢ Mantenimiento preventivo\n‚Ä¢ Selecci√≥n de repuestos",
        [
          { label: "üîß Tengo un problema", accion: () => manejarOpcion("diagnostico") },
          { label: "üè™ Buscar taller", accion: () => manejarOpcion("talleres") },
          { label: "üìÖ Mantenimiento", accion: () => manejarOpcion("mantenimiento") },
          { label: "üõí Comprar repuestos", accion: () => manejarOpcion("repuestos") },
          { label: "üîç B√∫squeda general", accion: () => manejarOpcion("busqueda") }
        ]
      );
    }
    
    setNuevoMensaje("");
  };

  // Funciones auxiliares
  const mostrarTodosLosTalleres = () => {
    simularRespuestaBot(
      "üìç **Talleres Cercanos:**",
      [
        { label: "Ver en mapa", accion: () => verEnMapa() }
      ],
      talleresBD
    );
  };

  const contactarTaller = (taller: any) => {
    agregarMensaje({ tipo: "usuario", contenido: `Quiero contactar ${taller.nombre}` });
    simularRespuestaBot(
      `üìû **Contactar ${taller.nombre}**\n\n**Tel√©fono:** ${taller.telefono}\n**Especialidad:** ${taller.especialidad}\n**Calificaci√≥n:** ‚≠ê ${taller.rating}/5.0\n**Distancia:** ${taller.distancia}\n\n¬øTe ayudo con algo m√°s?`,
      [
        { label: "Agendar cita", accion: () => agendarCita() },
        { label: "Ver servicios", accion: () => verServicios(taller) },
        { label: "Leer rese√±as", accion: () => mostrarRese√±asDetalladas(taller) }
      ]
    );
  };

  const verServicios = (taller: any) => {
    const servicios = taller.servicios?.join(", ") || "Servicios generales de mec√°nica";
    simularRespuestaBot(
      `üîß **Servicios de ${taller.nombre}:**\n\n${servicios}\n\n‚è∞ **Horarios:** ${taller.horarios}`
    );
  };

  const agendarCita = () => {
    simularRespuestaBot(
      "üìÖ **Agendar Cita**\n\nPara agendar una cita, puedes:\n\n1. Llamar directamente al taller\n2. Usar nuestra app m√≥vil\n3. Visitar el taller personalmente\n\nüí° **Tip:** Menciona que vienes de AutoParts Pro para descuentos especiales."
    );
  };

  const verEnMapa = () => {
    simularRespuestaBot("üó∫Ô∏è Te redirigir√© a Google Maps con las ubicaciones de todos nuestros talleres afiliados.");
  };

  // Funciones de b√∫squeda
  const realizarBusqueda = (mensaje: string) => {
    const termino = mensaje.toLowerCase();
    let resultados = {
      productos: [] as any[],
      servicios: [] as any[],
      talleres: [] as any[]
    };

    // Buscar productos
    resultados.productos = productosBD.filter(p => 
      p.nombre.toLowerCase().includes(termino) ||
      p.marca.toLowerCase().includes(termino) ||
      p.categoria.toLowerCase().includes(termino)
    ).slice(0, 3);

    // Buscar servicios
    resultados.servicios = serviciosBD.filter(s =>
      s.nombre.toLowerCase().includes(termino) ||
      s.categoria.toLowerCase().includes(termino) ||
      s.descripcion.toLowerCase().includes(termino)
    ).slice(0, 3);

    // Buscar talleres
    resultados.talleres = talleresBD.filter(t =>
      t.nombre.toLowerCase().includes(termino) ||
      t.especialidad.toLowerCase().includes(termino) ||
      t.servicios.some(servicio => servicio.toLowerCase().includes(termino))
    ).slice(0, 3);

    if (resultados.productos.length === 0 && resultados.servicios.length === 0 && resultados.talleres.length === 0) {
      simularRespuestaBot(
        `No encontr√© resultados para "${mensaje}". ¬øPodr√≠as intentar con otros t√©rminos?\n\nüí° **Sugerencias:**\n‚Ä¢ Usa el nombre espec√≠fico del producto\n‚Ä¢ Menciona la marca\n‚Ä¢ Describe el tipo de servicio`,
        [
          { label: "üõí Ver productos populares", accion: () => mostrarProductosPopulares() },
          { label: "‚öôÔ∏è Ver servicios", accion: () => mostrarServiciosPopulares() },
          { label: "üè™ Ver talleres", accion: () => mostrarTalleresMejores() }
        ]
      );
    } else {
      mostrarResultadosBusqueda(resultados, mensaje);
    }
  };

  const mostrarResultadosBusqueda = (resultados: any, termino: string) => {
    let contenido = `üîç **Resultados para "${termino}":**\n\n`;

    if (resultados.productos.length > 0) {
      contenido += "üõí **Productos encontrados:**\n";
      resultados.productos.forEach((p: any) => {
        contenido += `‚Ä¢ ${p.nombre} - ${p.precio}\n`;
      });
      contenido += "\n";
    }

    if (resultados.servicios.length > 0) {
      contenido += "‚öôÔ∏è **Servicios encontrados:**\n";
      resultados.servicios.forEach((s: any) => {
        contenido += `‚Ä¢ ${s.nombre} - ${s.precio} (${s.duracion})\n`;
      });
      contenido += "\n";
    }

    if (resultados.talleres.length > 0) {
      contenido += "üè™ **Talleres encontrados:**\n";
      resultados.talleres.forEach((t: any) => {
        contenido += `‚Ä¢ ${t.nombre} - ${t.especialidad} ‚≠ê${t.rating}\n`;
      });
    }

    simularRespuestaBot(
      contenido,
      [
        { label: "üõí Ver m√°s productos", accion: () => mostrarProductosPopulares() },
        { label: "‚öôÔ∏è Ver m√°s servicios", accion: () => mostrarServiciosPopulares() },
        { label: "üè™ Ver m√°s talleres", accion: () => mostrarTalleresMejores() },
        { label: "üîç Nueva b√∫squeda", accion: () => manejarOpcion("busqueda") }
      ],
      resultados.talleres,
      resultados.productos
    );
  };

  const mostrarProductosPopulares = () => {
    const productosPopulares = productosBD.slice(0, 4);
    simularRespuestaBot(
      "üõí **Productos M√°s Populares:**\n\n" + 
      productosPopulares.map(p => `‚Ä¢ ${p.nombre}\n  üí∞ ${p.precio} - ${p.marca}\n`).join('\n'),
      [
        { label: "üîß Ver frenos", accion: () => mostrarRepuestosPorCategoria("frenos") },
        { label: "üöó Ver motor", accion: () => mostrarRepuestosPorCategoria("motor") },
        { label: "‚ö° Ver el√©ctricos", accion: () => mostrarRepuestosPorCategoria("electrico") }
      ],
      [],
      productosPopulares
    );
  };

  const mostrarServiciosPopulares = () => {
    const serviciosPopulares = serviciosBD.slice(0, 4);
    simularRespuestaBot(
      "‚öôÔ∏è **Servicios M√°s Solicitados:**\n\n" +
      serviciosPopulares.map(s => `‚Ä¢ ${s.nombre}\n  üí∞ ${s.precio} - ‚è±Ô∏è ${s.duracion}\n`).join('\n'),
      [
        { label: "üîß Agendar servicio", accion: () => agendarCita() },
        { label: "üè™ Ver talleres", accion: () => mostrarTalleresMejores() },
        { label: "üí° M√°s informaci√≥n", accion: () => manejarOpcion("mantenimiento") }
      ]
    );
  };

  const mostrarTalleresMejores = () => {
    const talleresMejores = talleresBD.sort((a, b) => b.rating - a.rating);
    simularRespuestaBot(
      "üè™ **Talleres Mejor Calificados:**",
      [
        { label: "üìç Ver ubicaciones", accion: () => verEnMapa() },
        { label: "üìû Contactar", accion: () => contactarTaller(talleresMejores[0]) }
      ],
      talleresMejores
    );
  };

  const busquedaPorCategoria = () => {
    simularRespuestaBot(
      "üîç **B√∫squeda por Categor√≠a:**\n\n¬øEn qu√© categor√≠a quieres buscar?",
      [
        { label: "üîß Frenos y Suspensi√≥n", accion: () => buscarEnCategoria("frenos") },
        { label: "üöó Motor y Transmisi√≥n", accion: () => buscarEnCategoria("motor") },
        { label: "‚ö° Sistema El√©ctrico", accion: () => buscarEnCategoria("electrico") },
        { label: "üõû Neum√°ticos y Llantas", accion: () => buscarEnCategoria("neumaticos") },
        { label: "üõ¢Ô∏è Lubricantes y Filtros", accion: () => buscarEnCategoria("lubricantes") }
      ]
    );
  };

  const buscarEnCategoria = (categoria: string) => {
    const productos = productosBD.filter(p => p.categoria === categoria);
    const servicios = serviciosBD.filter(s => s.categoria === categoria);
    
    let contenido = `üìã **${categoria.charAt(0).toUpperCase() + categoria.slice(1)}:**\n\n`;
    
    if (productos.length > 0) {
      contenido += "üõí **Productos disponibles:**\n";
      productos.forEach(p => {
        contenido += `‚Ä¢ ${p.nombre} - ${p.precio}\n`;
      });
      contenido += "\n";
    }
    
    if (servicios.length > 0) {
      contenido += "‚öôÔ∏è **Servicios relacionados:**\n";
      servicios.forEach(s => {
        contenido += `‚Ä¢ ${s.nombre} - ${s.precio}\n`;
      });
    }

    simularRespuestaBot(
      contenido,
      [
        { label: "üõí Ver detalles productos", accion: () => mostrarProductosPopulares() },
        { label: "üè™ Buscar talleres especializados", accion: () => recomendarTallerPorEspecialidad(categoria) },
        { label: "üîç Otra categor√≠a", accion: () => busquedaPorCategoria() }
      ],
      [],
      productos
    );
  };

  return (
    <>
      {/* Bot√≥n flotante */}
      <AnimatePresence>
        {!abierto && (
          <motion.div
            initial={{ opacity: 0, scale: 0 }}
            animate={{ opacity: 1, scale: 1 }}
            exit={{ opacity: 0, scale: 0 }}
            className="fixed bottom-6 right-6 z-50"
          >
            <Button
              onClick={() => setAbierto(true)}
              className="w-14 h-14 rounded-full shadow-lg bg-primary hover:bg-primary/90"
            >
              <Bot className="h-6 w-6" />
            </Button>
            <div className="absolute -top-2 -right-2 w-4 h-4 bg-green-500 rounded-full animate-pulse"></div>
          </motion.div>
        )}
      </AnimatePresence>

      {/* Ventana del chat */}
      <AnimatePresence>
        {abierto && (
          <motion.div
            initial={{ opacity: 0, y: 100 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: 100 }}
            className="fixed bottom-6 right-6 z-50 w-96 max-w-[calc(100vw-2rem)]"
          >
            <Card className={`shadow-2xl ${minimizado ? "h-auto" : "h-[500px]"} flex flex-col`}>
              <CardHeader className="pb-3 bg-primary text-primary-foreground rounded-t-lg">
                <div className="flex justify-between items-center">
                  <div className="flex items-center gap-2">
                    <Avatar className="w-8 h-8">
                      <AvatarFallback className="bg-primary-foreground text-primary">
                        <Bot className="h-4 w-4" />
                      </AvatarFallback>
                    </Avatar>
                    <div>
                      <CardTitle className="text-sm text-primary-foreground">Asistente Automotriz</CardTitle>
                      <div className="flex items-center gap-1">
                        <div className="w-2 h-2 bg-green-400 rounded-full"></div>
                        <span className="text-xs text-primary-foreground/80">Especialista en l√≠nea</span>
                      </div>
                    </div>
                  </div>
                  <div className="flex gap-1">
                    <Button
                      variant="ghost"
                      size="sm"
                      onClick={() => setMinimizado(!minimizado)}
                      className="text-primary-foreground hover:bg-primary-foreground/20"
                    >
                      <Minimize2 className="h-4 w-4" />
                    </Button>
                    <Button
                      variant="ghost"
                      size="sm"
                      onClick={() => setAbierto(false)}
                      className="text-primary-foreground hover:bg-primary-foreground/20"
                    >
                      <X className="h-4 w-4" />
                    </Button>
                  </div>
                </div>
              </CardHeader>

              {!minimizado && (
                <>
                  <CardContent className="flex-1 overflow-y-auto space-y-4 p-4 max-h-80">
                    {mensajes.map((mensaje) => (
                      <div
                        key={mensaje.id}
                        className={`flex ${mensaje.tipo === "usuario" ? "justify-end" : "justify-start"}`}
                      >
                        <div className={`max-w-xs p-3 rounded-lg ${
                          mensaje.tipo === "usuario"
                            ? "bg-primary text-primary-foreground"
                            : "bg-muted"
                        }`}>
                          <p className="text-sm whitespace-pre-line">{mensaje.contenido}</p>
                          
                          {/* Opciones de respuesta r√°pida */}
                          {mensaje.opciones && (
                            <div className="mt-3 space-y-1">
                              {mensaje.opciones.map((opcion, index) => (
                                <Button
                                  key={index}
                                  variant="outline"
                                  size="sm"
                                  onClick={opcion.accion}
                                  className="text-xs w-full justify-start"
                                >
                                  {opcion.label}
                                </Button>
                              ))}
                            </div>
                          )}

                          {/* Talleres recomendados */}
                          {mensaje.talleres && (
                            <div className="mt-3 space-y-2">
                              {mensaje.talleres.map((taller) => (
                                <div key={taller.id} className="border rounded p-2 bg-background text-foreground">
                                  <div className="flex justify-between items-start">
                                    <div>
                                      <p className="font-medium text-sm">{taller.nombre}</p>
                                      <p className="text-xs text-muted-foreground">{taller.especialidad}</p>
                                      <div className="flex items-center gap-2 mt-1">
                                        <div className="flex items-center gap-1">
                                          <Star className="h-3 w-3 fill-yellow-400 text-yellow-400" />
                                          <span className="text-xs">{taller.rating}</span>
                                        </div>
                                        <span className="text-xs text-muted-foreground">‚Ä¢ {taller.distancia}</span>
                                      </div>
                                    </div>
                                  </div>
                                  <Button 
                                    variant="outline" 
                                    size="sm" 
                                    className="w-full mt-2 text-xs"
                                    onClick={() => contactarTaller(taller)}
                                  >
                                    <Phone className="h-3 w-3 mr-1" />
                                    Contactar
                                  </Button>
                                </div>
                              ))}
                            </div>
                          )}
                        </div>
                      </div>
                    ))}
                    
                    {escribiendo && (
                      <div className="flex justify-start">
                        <div className="bg-muted p-3 rounded-lg">
                          <div className="flex space-x-1">
                            <div className="w-2 h-2 bg-muted-foreground rounded-full animate-bounce"></div>
                            <div className="w-2 h-2 bg-muted-foreground rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                            <div className="w-2 h-2 bg-muted-foreground rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                          </div>
                        </div>
                      </div>
                    )}
                  </CardContent>

                  <div className="p-4 border-t">
                    <div className="flex gap-2">
                      <Input
                        placeholder="Pregunta sobre tu auto..."
                        value={nuevoMensaje}
                        onChange={(e) => setNuevoMensaje(e.target.value)}
                        onKeyPress={(e) => e.key === 'Enter' && enviarMensaje()}
                        className="text-sm"
                      />
                      <Button onClick={enviarMensaje} disabled={!nuevoMensaje.trim()} size="sm">
                        <Send className="h-4 w-4" />
                      </Button>
                    </div>
                    <p className="text-xs text-muted-foreground mt-2 text-center">
                      üí° Preg√∫ntame sobre problemas, talleres o mantenimiento
                    </p>
                  </div>
                </>
              )}
            </Card>
          </motion.div>
        )}
      </AnimatePresence>
    </>
  );
}